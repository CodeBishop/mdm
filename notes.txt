

Alerting When Finished
----------------------
    The purpose to this alert system is to make the program grab the user's attention if there were drive tests in
progress and they have all completed. This is accomplished by having mdm maintain several global variables:
        bool testsInProgress: True if tests are running.
        bool completionAlertFlag: True if tests have completed and the program is awaiting user acknowledgement.
        list drivesRunningTests: List of Drive instances that are currently running tests.
    The mechanism operates as follows:
        testsInProgress and completionAlertFlag start out False.
        If queryIsDone() returns True and the drive is testing then it gets added to drivesRunningTests if not already.
        If queryIsDone() returns True and the drive is idle then it gets removed from drivesRunningTests.
        After calling queryIsDone(), if testsInProgress is True and drivesRunningTests is empty then:
            testInProgress = False
            completionAlertFlag = True


Potential Commands
------------------
    One drive short scan.
    One drive long scan.
    One drive wipe.
    One drive long scan and if pass then wipe.
    One drive show all test history or state there is none or state that the drive is incapable.
    All drives short scan.
    All drives long scan.
    All drives wipe.
    All drives long scan and if pass then wipe.

Things That Should Be Possible When Drawing the Drive Table
-----------------------------------------------------------
    Re-arrange the column ordering.
    Set individual column widths.
    Turn columns off or on.
    Move the top-left corner position.
    Specify a box (max width and height) that it won't overflow.
    Make it scrollable?

Redoing Drive Table Drawing
---------------------------
buildDriveTable()
    This method fully understand what Drives are. It's tightly coupled to that class.
    It does not know the column widths, it just creates a 2-D array of ColoredString objects.
    Inserts color coding into the strings based on value tolerances.
    Determines the column ordering and which columns exist.
    Writes the columns header.
drawTable(String table[][], columnWidths, x, y, width, height)
    Knows nothing about Drives.
    Draws strings at screen positions based on TableLayout description.
    Truncates strings to the column widths specified in TableLayout and adds an ellipsis if needed.
    Understands color codes and uses them when making its curses.putStr() calls.
    Truncates strings and table rows to fit within the given width and height restrictions.
    Should probably draw to a curses.Pad and then paste the pad onto the screen.
ColoredString
    length(): Returns the length of the string, not including color codes.
    subset(start, end): Returns a section of a string, including color codes but indexed without them.
drawColoredString(x, y, string)
    Draws a color-coded string at a given location.
TableLayout
    Has column widths but no understanding of what's in those columns.
    Has no connection to the Drive class.
